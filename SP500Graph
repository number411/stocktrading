'''
from pandas.tests.test_algos import TestGroupVarFloat64
from numpy.ma.core import count
from scipy.stats.morestats import Variance
from talib.func import STDDEV

if __name__ == '__main__':
    #!/usr/bin/env python
    import scipy
    import matplotlib.pyplot as plt
    from datetime import datetime as dt
    import numpy as np
    from matplotlib.dates import DateFormatter, WeekdayLocator,\
        DayLocator, MONDAY, num2date, date2num
    from matplotlib.finance import quotes_historical_yahoo_ohlc, candlestick_ohlc
    import talib
    import matplotlib.mlab as mlab
    import datetime
    
    # (Year, month, day) tuples suffice as args for quotes_historical_yahoo
    date1 = (2016, 1, 1)
    date2 = (2017, 1, 22)
    mondays = WeekdayLocator(MONDAY)        # major ticks on the mondays
    alldays = DayLocator()              # minor ticks on the days
    weekFormatter = DateFormatter('%b %d')  # e.g., Jan 12
    dayFormatter = DateFormatter('%d')      # e.g., 12

    #Dow Jones 30
    #tickerlist = ['AAP','AXP','BA','CAT','CSC','CVX','DD','DIS','GE','GS','HD','IBM','INT','JNJ','JPM','KO','MCD','MMM','MRK','MSF','NKE','PFE','PG','TRV','UNH','UTX','V','VZ','WMT','XOM']
    #S&P 500
    tickerlist = ['MMM','ABT','ABBV','ACN','ATVI','AYI','ADBE','AAP','AES','AET','AMG','AFL','A','APD','AKAM','ALK','ALB','AGN','LNT','ALXN','ALLE','ADS','ALL','GOOGL','GOOG','MO','AMZN','AEE','AAL','AEP','AXP','AIG','AMT','AWK','AMP','ABC','AME','AMGN','APH','APC','ADI','ANTM','AON','APA','AIV','AAPL','AMAT','ADM','ARNC','AJG','AIZ','T','ADSK','ADP','AN','AZO','AVB','AVY','BHI','BLL','BAC','BK','BCR','BAX','BBT','BDX','BBBY','BRK-B','BBY','BIIB','BLK','HRB','BA','BWA','BXP','BSX','BMY','AVGO','BF-B','CHRW','CA','COG','CPB','COF','CAH','HSIC','KMX','CCL','CAT','CBG','CBS','CELG','CNC','CNP','CTL','CERN','CF','SCHW','CHTR','CHK','CVX','CMG','CB','CHD','CI','XEC','CINF','CTAS','CSCO','C','CFG','CTXS','CLX','CME','CMS','COH','KO','CTSH','CL','CMCSA','CMA','CAG','CXO','COP','ED','STZ','GLW','COST','COTY','CCI','CSRA','CSX','CMI','CVS','DHI','DHR','DRI','DVA','DE','DLPH','DAL','XRAY','DVN','DLR','DFS','DISCA','DISCK','DG','DLTR','D','DOV','DOW','DPS','DTE','DD','DUK','DNB','ETFC','EMN','ETN','EBAY','ECL','EIX','EW','EA','EMR','ENDP','ETR','EVHC','EOG','EQT','EFX','EQIX','EQR','ESS','EL','ES','EXC','EXPE','EXPD','ESRX','EXR','XOM','FFIV','FB','FAST','FRT','FDX','FIS','FITB','FSLR','FE','FISV','FLIR','FLS','FLR','FMC','FTI','FL','F','FTV','FBHS','BEN','FCX','FTR','GPS','GRMN','GD','GE','GGP','GIS','GM','GPC','GILD','GPN','GS','GT','GWW','HAL','HBI','HOG','HAR','HRS','HIG','HAS','HCA','HCP','HP','HES','HPE','HOLX','HD','HON','HRL','HST','HPQ','HUM','HBAN','IDXX','ITW','ILMN','IR','INTC','ICE','IBM','IP','IPG','IFF','INTU','ISRG','IVZ','IRM','JEC','JBHT','SJM','JNJ','JCI','JPM','JNPR','KSU','K','KEY','KMB','KIM','KMI','KLAC','KSS','KHC','KR','LB','LLL','LH','LRCX','LEG','LEN','LVLT','LUK','LLY','LNC','LLTC','LKQ','LMT','L','LOW','LYB','MTB','MAC','M','MNK','MRO','MPC','MAR','MMC','MLM','MAS','MA','MAT','MKC','MCD','MCK','MJN','MDT','MRK','MET','MTD','KORS','MCHP','MU','MSFT','MAA','MHK','TAP','MDLZ','MON','MNST','MCO','MS','MOS','MSI','MUR','MYL','NDAQ','NOV','NAVI','NTAP','NFLX','NWL','NFX','NEM','NWSA','NWS','NEE','NLSN','NKE','NI','NBL','JWN','NSC','NTRS','NOC','NRG','NUE','NVDA','ORLY','OXY','OMC','OKE','ORCL','PCAR','PH','PDCO','PAYX','PYPL','PNR','PBCT','PEP','PKI','PRGO','PFE','PCG','PM','PSX','PNW','PXD','PBI','PNC','RL','PPG','PPL','PX','PCLN','PFG','PG','PGR','PLD','PRU','PEG','PSA','PHM','PVH','QRVO','PWR','QCOM','DGX','RRC','RTN','O','RHT','REGN','RF','RSG','RAI','RHI','ROK','COL','ROP','ROST','RCL','R','CRM','SCG','SLB','SNI','STX','SEE','SRE','SHW','SIG','SPG','SWKS','SLG','SNA','SO','LUV','SWN','SE','SPGI','SWK','SPLS','SBUX','STT','SRCL','SYK','STI','SYMC','SYF','SYY','TROW','TGT','TEL','TGNA','TDC','TSO','TXN','TXT','COO','HSY','TRV','TMO','TIF','TWX','TJX','TMK','TSS','TSCO','TDG','RIG','TRIP','FOXA','FOX','TSN','UDR','ULTA','USB','UA','UAA','UNP','UAL','UNH','UPS','URI','UTX','UHS','UNM','URBN','VFC','VLO','VAR','VTR','VRSN','VRSK','VZ','VRTX','VIAB','V','VNO','VMC','WMT','WBA','DIS','WM','WAT','WEC','WFC','HCN','WDC','WU','WRK','WY','WHR','WFM','WMB','WLTW','WYN','WYNN','XEL','XRX','XLNX','XL','XYL','YHOO','YUM','ZBH','ZION','ZTS']
    fig = plt.gcf()
    ax = plt.gca()
    #ax.xaxis_date()
    ax.set_xlim([datetime.date(date1[0],date1[1],date1[2]), datetime.date(date2[0],date2[1],date2[2])])    
    ax.autoscale_view()    
    ax.set_ylim(0,50)
    for tkr in tickerlist :
        quotes = quotes_historical_yahoo_ohlc(tkr, date1, date2)
        if len(quotes) == 0:
            raise SystemExit
        d = []
        #candlestick_ohlc(ax1, quotes, width=0.6)
        xdate   = np.array([ d[0] for d in quotes ])
        yopen   = np.array([ d[1] for d in quotes ])
        yhigh   = np.array([ d[2] for d in quotes  ])
        ylow    = np.array([ d[3] for d in quotes  ])
        yclose  = np.array([ d[4] for d in quotes  ])
        
        gapreturns = yopen[1:]/yclose[0:-1]
        sessionreturns = yclose[0:]/yopen[0:]
        
        nbrdays = xdate.__len__()
        for x in range(5,nbrdays,5):
            wklylow = min(ylow[x-5:x])
            wklyhigh = max(yhigh[x-5:x])
            wklyrange = (float(wklyhigh) - float(wklylow)) * 100 / float(scipy.mean([float(wklylow),float(wklyhigh)]))
            #plt.plot(xdate[x],wklyrange,'ro')
            if float(wklyrange) > 10:
                plt.text(xdate[x],wklyrange,tkr)
        sma50 = talib.SMA(yclose,50)
        sma13 = talib.SMA(yclose,13)
         
        boollong = sma13 > sma50
        longdatesindex = np.nonzero(boollong)
        print("stop here")
        #talib.ATR
    plt.show()
